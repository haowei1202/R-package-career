
install_package<-function(){
  # install packages
  install.packages('openxlsx')
  install.packages('httr')
  install.packages('tidyverse')
}

check<-function(){
  # define welcome context
  str<-"It's OK!"
  print(str)
}

welcome<-function(){
  # define welcome context
  welcome_str<-"Welcome to our career package!"
  print(welcome_str)
}

download_data<-function(){
  library(httr)
  url <- 'https://www.bls.gov/emp/ind-occ-matrix/occupation.xlsx'
  GET(url, write_disk("./occupation.xlsx", overwrite=TRUE))
}

load_career_data<-function(){
  install_package
  download_data()
  library(tidyverse)
  library(openxlsx)
  # read occupation data
  data_filename<-"occupation.xlsx"
  sheet_id<-8
  data<-read.xlsx(data_filename, sheet=sheet_id)
  tbl_df(data_needed)

  # select rows
  row_id<-3:nrow(data)

  # select columns
  col_id<-c(1,9,10)
  data<-data[row_id,col_id]

  # set the names of columns
  col1<-"Occupation"
  col2<-"Occupational_openings"
  col3<-"Median_annual_wage"
  colnames(data)<-c(col1,col2,col3)

  # read occupational groups
  data_filename<-"occupational_group.xlsx"
  sheet_id<-1
  groups<-read.xlsx(data_filename, sheet=sheet_id)

  # set the names of columns
  colnames(groups)<-c("Occupation","Occupational_group")

  data_needed<-merge(x=data,y=groups,by="Occupation", all.y=TRUE)

  # remove the NAN items
  data_needed<-na.omit(data_needed)

  # tranform the string to number
  wage_number<-as.numeric(data_needed$Median_annual_wage)
  openings_number<-as.numeric(data_needed$Occupational_openings)*1000
  data_needed$Median_annual_wage<-wage_number
  data_needed$Occupational_openings<-openings_number
  data<-data_needed
  return(data)
}

show_data<-function(data){
  tbl_df(data)
}

get_engineering_jobs<-function(data){
  # read the data we needed in groups
  job1<-'Computer and Information Technology'
  job2<-'Architecture and Engineering'
  job3<-'Life, Physical, and Social Science'
  job4<-'Math'

  # remove the NAN items
  data_needed<-na.omit(data)

  # tranform the string to number
  wage_number<-as.numeric(data_needed$Median_annual_wage)
  openings_number<-as.numeric(data_needed$Occupational_openings)
  data_needed$Median_annual_wage<-wage_number
  data_needed$Occupational_openings<-openings_number
  data<-data_needed

  Computer_and_Information_Technology<-filter(data,Occupational_group==job1)
  Architecture_and_Engineering<-filter(data,Occupational_group==job2)
  Life_Physical_and_Social_Science<-filter(data,Occupational_group==job3)
  Math<-filter(data,Occupational_group==job4)

  # set the colors
  cols<-c('Computer and\nInformation Technology'="#191970", 'Architecture and\nEngineering'="#008B00", 'Life, Physical, and\nSocial Science'="#8B2323",'Math'="#63B8FF")

  # plot the figure
  p<-ggplot()
  p<-p+geom_point(aes(x=Computer_and_Information_Technology$Occupational_openings,y=Computer_and_Information_Technology$Median_annual_wage,colour="Computer and\nInformation Technology"),size=2)
  p<-p+geom_point(aes(x=Architecture_and_Engineering$Occupational_openings,y=Architecture_and_Engineering$Median_annual_wage,colour="Architecture and\nEngineering"),size=2)
  p<-p+geom_point(aes(x=Life_Physical_and_Social_Science$Occupational_openings,y=Life_Physical_and_Social_Science$Median_annual_wage,colour="Life, Physical, and\nSocial Science"),size=2)
  p<-p+geom_point(aes(x=Math$Occupational_openings,y=Math$Median_annual_wage,colour="Math"),size=2)
  p<-p+scale_colour_manual(name="class",values=cols)
  p<-p+geom_hline(yintercept=38640, linetype="dashed")
  p<-p+theme(panel.background=element_blank(),panel.grid.major=element_line(linetype = "dotted", color="grey"),
             axis.line=element_line(size=0.5),legend.title=element_blank());
  p<-p+scale_y_continuous(breaks=c(0,25000,50000,75000,100000,125000,150000),limits=c(0,150000),expand=c(0,0))
  p<-p+scale_x_continuous(breaks=c(0,25000,50000,75000,100000,125000),limits=c(0,150000),expand=c(0,0))
  p<-p+annotate("text", x=108000, y=52000,label="All occupations,")
  p<-p+annotate("text", x=120000, y=45000,label="median annual wage = $38,640")
  p<-p+labs(x="Annual average openings, projected 2018-28",y="Median annual wage, 2018")
  p<-p+theme(legend.position = "top")
  return(p)
}

get_liberal_jobs<-function(data){
  # read the data we needed in groups
  job1 <- 'Legal'
  job2 <-'Education, Training, and Library'
  job3 <-'Community and Social Service'
  job4 <-'Protective Service'

  # remove the NAN items
  data_needed<-na.omit(data)

  # tranform the string to number
  wage_number<-as.numeric(data_needed$Median_annual_wage)
  openings_number<-as.numeric(data_needed$Occupational_openings)
  data_needed$Median_annual_wage<-wage_number
  data_needed$Occupational_openings<-openings_number
  data<-data_needed

  Legal<-filter(data,Occupational_group==job1)
  Education_Training_and_Library<-filter(data,Occupational_group==job2)
  Community_and_Social_Service<-filter(data,Occupational_group==job3)
  Protective_Service<-filter(data,Occupational_group==job4)

  # set the colors
  cols<-c('Legal'="#191970", 'Education, Training,\nand Library'="#008B00", 'Community and\nSocial Service'="#8B2323",'Protective Service'="#63B8FF")

  # plot the figure
  p<-ggplot()
  p<-p+geom_point(aes(x=Education_Training_and_Library$Occupational_openings,y=Education_Training_and_Library$Median_annual_wage,colour="Education, Training,\nand Library"),size=2)
  p<-p+geom_point(aes(x=Protective_Service$Occupational_openings,y=Protective_Service$Median_annual_wage,colour="Protective Service"),size=2)
  p<-p+geom_point(aes(x=Community_and_Social_Service$Occupational_openings,y=Community_and_Social_Service$Median_annual_wage,colour="Community and\nSocial Service"),size=2)
  p<-p+geom_point(aes(x=Legal$Occupational_openings,y=Legal$Median_annual_wage,colour="Legal"),size=2)

  p<-p+scale_colour_manual(name="class",values=cols)
  p<-p+geom_hline(yintercept=38640, linetype="dashed")
  p<-p+theme(panel.background=element_blank(),panel.grid.major=element_line(linetype = "dotted", color="grey"),
             axis.line=element_line(size=0.5),legend.title=element_blank());
  p<-p+scale_y_continuous(breaks=c(0,25000,50000,75000,100000,125000,150000),limits=c(0,150000),expand=c(0,0))
  p<-p+scale_x_continuous(breaks=c(0,25000,50000,75000,100000,125000,150000),limits=c(0,160000),expand=c(0,0))
  # add the annotate
  p<-p+annotate("text", x=115600, y=52000,label="All occupations,")
  p<-p+annotate("text", x=130000, y=45000,label="median annual wage = $38,640")
  p<-p+labs(x="Annual average openings, projected 2018-28",y="Median annual wage, 2018")
  p<-p+theme(legend.position = "top")
  return(p)
}

get_service_jobs<-function(data){
  # read the data we needed in groups
  job1 <- 'Food Preparation and Serving'
  job2 <- 'Media and Communication'
  job3 <- 'Entertainment and Sports'
  job4 <- 'Arts and Design'

  # remove the NAN items
  data_needed<-na.omit(data)

  # tranform the string to number
  wage_number<-as.numeric(data_needed$Median_annual_wage)
  openings_number<-as.numeric(data_needed$Occupational_openings)
  data_needed$Median_annual_wage<-wage_number
  data_needed$Occupational_openings<-openings_number
  data<-data_needed

  Food_Preparation_and_Serving<-filter(data,Occupational_group==job1)
  Media_and_Communication<-filter(data,Occupational_group==job2)
  Entertainment_and_Sports<-filter(data,Occupational_group==job3)
  Arts_and_Design<-filter(data,Occupational_group==job4)

  # set the colors
  cols=c('Food Preparation\nand Serving'="#63B8FF",'Media and\nCommunication'="#8B2323",'Entertainment\nand Sports'="#008B00", 'Arts and Design'="#191970")

  # plot the figure
  p<-ggplot()
  p<-p+geom_point(aes(x=Food_Preparation_and_Serving$Occupational_openings,y=Food_Preparation_and_Serving$Median_annual_wage,colour="Food Preparation\nand Serving"),size=2)
  p<-p+geom_point(aes(x=Media_and_Communication$Occupational_openings,y=Media_and_Communication$Median_annual_wage,colour="Media and\nCommunication"),size=2)
  p<-p+geom_point(aes(x=Arts_and_Design$Occupational_openings,y=Arts_and_Design$Median_annual_wage,colour="Arts and Design"),size=2)
  p<-p+geom_point(aes(x=Entertainment_and_Sports$Occupational_openings,y=Entertainment_and_Sports$Median_annual_wage,colour="Entertainment\nand Sports"),size=2)
  p<-p+scale_colour_manual(name="class",values=cols)
  p<-p+geom_hline(yintercept=38640, linetype="dashed")
  p<-p+theme(panel.background=element_blank(),panel.grid.major=element_line(linetype = "dotted", color="grey"),
             axis.line=element_line(size=0.5),legend.title=element_blank());
  p<-p+scale_y_continuous(breaks=c(0,25000,50000,75000,100000),limits=c(0,100000),expand=c(0,0))
  p<-p+scale_x_continuous(breaks=c(0,200000,400000,600000,800000,1000000),limits=c(0,1200000),expand=c(0,0))

  # add the annotate
  p<-p+annotate("text", x=850000, y=52000,label="All occupations,")
  p<-p+annotate("text", x=950000, y=45000,label="median annual wage = $38,640")
  p<-p+labs(x="Annual average openings, projected 2018-28",y="Median annual wage, 2018")
  p<-p+theme(legend.position = "top")
  return(p)
}

get_traditional_jobs<-function(data){
  # read the data we needed in groups
  job1 = 'Farming, Fishing, and Forestry'
  job2 = 'Construction and Extraction'
  job3 = 'Installation, Maintenance, and Repair'
  job4 = 'Production'

  # remove the NAN items
  data_needed<-na.omit(data)

  # tranform the string to number
  wage_number<-as.numeric(data_needed$Median_annual_wage)
  openings_number<-as.numeric(data_needed$Occupational_openings)
  data_needed$Median_annual_wage<-wage_number
  data_needed$Occupational_openings<-openings_number
  data<-data_needed

  Farming_Fishing_and_Forestry<-filter(data,Occupational_group==job1)
  Construction_and_Extraction<-filter(data,Occupational_group==job2)
  Installation_Maintenance_and_Repair<-filter(data,Occupational_group==job3)
  Production<-filter(data,Occupational_group==job4)

  # set the colors
  cols<-c('Farming Fishing\nandForestry'="#191970", 'Construction and\nExtraction'="#008B00", 'Installation Maintenance\nand Repair'="#8B2323",'Production'="#63B8FF")

  # plot the figure
  p<-ggplot()
  p<-p+geom_point(aes(x=Construction_and_Extraction$Occupational_openings,y=Construction_and_Extraction$Median_annual_wage,colour="Construction and\nExtraction"),size=2)
  p<-p+geom_point(aes(x=Production$Occupational_openings,y=Production$Median_annual_wage,colour="Production"),size=2)
  p<-p+geom_point(aes(x=Installation_Maintenance_and_Repair$Occupational_openings,y=Installation_Maintenance_and_Repair$Median_annual_wage,colour="Installation Maintenance\nand Repair"),size=2)
  p<-p+geom_point(aes(x=Farming_Fishing_and_Forestry$Occupational_openings,y=Farming_Fishing_and_Forestry$Median_annual_wage,colour="Farming Fishing\nandForestry"),size=2)
  p<-p+scale_colour_manual(name="class",values=cols)
  p<-p+geom_hline(yintercept=38640, linetype="dashed")
  p<-p+theme(panel.background=element_blank(),panel.grid.major=element_line(linetype = "dotted", color="grey"),
             axis.line=element_line(size=0.5),legend.title=element_blank());
  p<-p+scale_y_continuous(breaks=c(0,25000,50000,75000,100000),limits=c(0,100000),expand=c(0,0))
  p<-p+scale_x_continuous(breaks=c(0,50000,100000,150000,200000),limits=c(0,210000),expand=c(0,0))

  # add the annotate
  p<-p+annotate("text", x=150600, y=52000,label="All occupations,")
  p<-p+annotate("text", x=170000, y=45000,label="median annual wage = $38,640")
  p<-p+labs(x="Annual average openings, projected 2018-28",y="Median annual wage, 2018")
  p<-p+theme(legend.position = "top")
  return(p)
}


mean_wage<-function(data){
  wage<-data$Median_annual_wage
  mean_wage<-mean(wage)
  return(mean_wage)
}

sum_openings<-function(data){
  openings<-data$Occupational_openings
  sum_openings<-sum(openings)
  return(sum_openings)
}

top_wage_job<-function(data){
  wage<-data$Median_annual_wage
  max_value<-max(wage)
  row_id<-data$Median_annual_wage==max_value
  e<-data[row_id,]$Occupation
  col<-data$Occupation==e
  job<-data[col,]
  return(job)
}

top_openings_job<-function(data){
  job<-data[data$Occupation==data[data$Occupational_openings==max(data$Occupational_openings),]$Occupation,]
  return(job)
}

bottom_wage_job<-function(data){
  job<-data[data$Occupation==data[data$Median_annual_wage==min(data$Median_annual_wage),]$Occupation,]
  return(job)
}

bottom_openings_job<-function(data){
  job<-data[data$Occupation==data[data$Occupational_openings==min(data$Occupational_openings),]$Occupation,]
  return(job)
}

top_wage_industry<-function(data){
  groups<-levels(factor(data$Occupational_group))
  group_names<-c()
  mean_wages<-c()
  for( group in groups){

    # get names of all the groups
    group_names<-c(group_names,group)

    # get the mean wages for all the groups
    mean_wage<-mean(data[which(data$Occupational_group==group), ]$Median_annual_wage)
    mean_wages<-c(mean_wages,mean_wage)
  }
  mean_wages_dataframe = data.frame(group_names,mean_wages)
  names(mean_wages_dataframe)<-c("group","mean_wage")
  group<-mean_wages_dataframe[mean_wages_dataframe$group==mean_wages_dataframe[mean_wages_dataframe$mean_wage==max(mean_wages_dataframe$mean_wage),]$group,]
  return(group)
}

bottom_wage_industry<-function(data){
  groups<-levels(factor(data$Occupational_group))
  group_names<-c()
  mean_wages<-c()
  for( group in groups){

    # get names of all the groups
    group_names<-c(group_names,group)

    # get the mean wages for all the groups
    mean_wage<-mean(data[which(data$Occupational_group==group), ]$Median_annual_wage)
    mean_wages<-c(mean_wages,mean_wage)
  }
  mean_wages_dataframe = data.frame(group_names,mean_wages)
  names(mean_wages_dataframe)<-c("group","mean_wage")
  group<-mean_wages_dataframe[mean_wages_dataframe$group==mean_wages_dataframe[mean_wages_dataframe$mean_wage==min(mean_wages_dataframe$mean_wage),]$group,]
  return(group)
}

top_openings_industry<-function(data){
  groups<-levels(factor(data$Occupational_group))
  group_names<-c()
  sum_openings<-c()
  for( group in groups){

    # get names of all the groups
    group_names<-c(group_names,group)

    # get the mean wages for all the groups
    sum_opening<-sum(data[which(data$Occupational_group==group), ]$Occupational_openings)
    sum_openings<-c(sum_openings,sum_opening)
  }
  sum_openings_dataframe<-cbind.data.frame(group_names,sum_openings)
  names(sum_openings_dataframe)<-c("group","sum_opening")
  group<-sum_openings_dataframe[sum_openings_dataframe$group==sum_openings_dataframe[sum_openings_dataframe$sum_opening==max(sum_openings_dataframe$sum_opening),]$group,]
  return(group)
}

bottom_openings_industry<-function(data){
  groups<-levels(factor(data$Occupational_group))
  group_names<-c()
  sum_openings<-c()
  for( group in groups){

    # get names of all the groups
    group_names<-c(group_names,group)

    # get the mean wages for all the groups
    sum_opening<-sum(data[which(data$Occupational_group==group), ]$Occupational_openings)
    sum_openings<-c(sum_openings,sum_opening)
  }
  sum_openings_dataframe<-cbind.data.frame(group_names,sum_openings)
  names(sum_openings_dataframe)<-c("group","sum_opening")
  group<-sum_openings_dataframe[sum_openings_dataframe$group==sum_openings_dataframe[sum_openings_dataframe$sum_opening==min(sum_openings_dataframe$sum_opening),]$group,]
  return(group)
}
